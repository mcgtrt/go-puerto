// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.793
package navigation

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Header() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = headerCss().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<header class=\"site-header\"><div class=\"container\"><div class=\"logo\"><a href=\"#\">Logo</a></div><nav class=\"nav\"><ul class=\"nav-links\"><li><a href=\"#\">Home</a></li><li><a href=\"#\">About</a></li><li><a href=\"#\">Services</a></li><li><a href=\"#\">Contact</a></li></ul></nav></div></header>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func headerCss() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<style>\n\t\t.site-header {\n\t\t\tbackground-color: var(--primary-color);\n\t\t\tcolor: var(--white);\n\t\t\tpadding: 10px 0;\n\t\t\tposition: relative;\n\t\t}\n\n\t\t.site-header .container {\n\t\t\tdisplay: flex;\n\t\t}\n\n\t\t.site-header .logo a {\n\t\t\tcolor: var(--white);\n\t\t\tfont-size: 1.5rem;\n\t\t\tfont-weight: bold;\n\t\t\ttext-decoration: none;\n\t\t}\n\n\t\t.nav {\n\t\t\tmargin-left: auto;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-between;\n\t\t\talign-items: center;\n\t\t}\n\n\t\t.nav-links {\n\t\t\tlist-style: none;\n\t\t\tpadding: 0;\n\t\t\tmargin: 0;\n\t\t\tdisplay: flex;\n\t\t\tgap: 20px;\n\t\t}\n\n\t\t.nav-links a {\n\t\t\tcolor: var(--white);\n\t\t\ttext-decoration: none;\n\t\t\tfont-size: 1rem;\n\t\t\tfont-weight: 500;\n\t\t\ttransition: color 0.3s;\n\t\t}\n\n\t\t.nav-links a:hover {\n\t\t\tcolor: var(--secondary-color);\n\t\t}\n\n\t\t.nav-toggle {\n\t\t\tdisplay: none;\n\t\t\tbackground: none;\n\t\t\tborder: none;\n\t\t\tcursor: pointer;\n\t\t}\n\n\t\t.nav-toggle .hamburger {\n\t\t\tdisplay: block;\n\t\t\twidth: 25px;\n\t\t\theight: 3px;\n\t\t\tbackground: var(--white);\n\t\t\tborder-radius: 2px;\n\t\t\tposition: relative;\n\t\t}\n\n\t\t.nav-toggle .hamburger::before,\n\t\t.nav-toggle .hamburger::after {\n\t\t\tcontent: '';\n\t\t\tposition: absolute;\n\t\t\twidth: 100%;\n\t\t\theight: 3px;\n\t\t\tbackground: var(--white);\n\t\t\tborder-radius: 2px;\n\t\t\ttransition: all 0.3s;\n\t\t}\n\n\t\t.nav-toggle .hamburger::before {\n\t\t\ttop: -8px;\n\t\t}\n\n\t\t.nav-toggle .hamburger::after {\n\t\t\tbottom: -8px;\n\t\t}\n\n\t\t/* Responsive Design */\n\t\t@media (max-width: 768px) {\n\t\t\t.nav-links {\n\t\t\t\tflex-direction: column;\n\t\t\t\tdisplay: none;\n\t\t\t\tbackground-color: var(--primary-color);\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 100%;\n\t\t\t\tright: 0;\n\t\t\t\twidth: 100%;\n\t\t\t\tpadding: 10px 0;\n\t\t\t}\n\n\t\t\t.nav-links a {\n\t\t\t\tpadding: 10px 20px;\n\t\t\t\tdisplay: block;\n\t\t\t\ttext-align: center;\n\t\t\t}\n\n\t\t\t.nav-links.active {\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\n\t\t\t.nav-toggle {\n\t\t\t\tdisplay: block;\n\t\t\t}\n\t\t}\n\n\t\t@media (min-width: 769px) and (max-width: 1024px) {\n\t\t\t.nav-links a {\n\t\t\t\tfont-size: 0.9rem;\n\t\t\t}\n\t\t}\n\n\t\t@media (min-width: 1025px) {\n\t\t\t.nav-links a {\n\t\t\t\tfont-size: 1rem;\n\t\t\t}\n\t\t}\n\t</style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
